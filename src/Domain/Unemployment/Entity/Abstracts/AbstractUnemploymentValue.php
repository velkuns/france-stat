<?php

/*
 * Copyright (c) Romain Cottard
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace Application\Domain\Unemployment\Entity\Abstracts;

use Eureka\Component\Orm\EntityInterface;
use Eureka\Component\Orm\Traits;
use Eureka\Component\Validation\Exception\ValidationException;
use Eureka\Component\Validation\ValidatorFactoryInterface;
use Eureka\Component\Validation\ValidatorEntityFactoryInterface;
use Application\Domain\Unemployment\Entity\UnemploymentValue;
use Application\Domain\Unemployment\Repository\UnemploymentValueRepositoryInterface;

/**
 * Abstract UnemploymentValue data class.
 *
 * /!\ AUTO GENERATED FILE. DO NOT EDIT THIS FILE.
 * You can add your specific code in child class: UnemploymentValue
 *
 * @author Eureka Orm Generator
 */
abstract class AbstractUnemploymentValue implements EntityInterface
{
    /** @use Traits\EntityTrait<UnemploymentValueRepositoryInterface, UnemploymentValue> */
    use Traits\EntityTrait;

    /** @var int $id Property id */
    protected int $id = 0;

    /** @var int $unemploymentId Property unemploymentId */
    protected int $unemploymentId = 0;

    /** @var int $year Property year */
    protected int $year = 0;

    /** @var int $quarter Property quarter */
    protected int $quarter = 0;

    /** @var int $number Property number */
    protected int $number = 0;

    /** @var float $multiplicator Property multiplicator */
    protected float $multiplicator = 1.0;

    /** @var string $dateOrigin Property dateOrigin */
    protected string $dateOrigin = '0000-00-00 00:00:00';

    /** @var string $dateUpdate Property dateUpdate */
    protected string $dateUpdate = '0000-00-00 00:00:00';

    /**
     * AbstractEntity constructor.
     *
     * @param UnemploymentValueRepositoryInterface $repository
     * @param ValidatorFactoryInterface|null $validatorFactory
     * @param ValidatorEntityFactoryInterface|null $validatorEntityFactory
     */
    public function __construct(
        UnemploymentValueRepositoryInterface $repository,
        ?ValidatorFactoryInterface $validatorFactory = null,
        ?ValidatorEntityFactoryInterface $validatorEntityFactory = null,
    ) {
        $this->setRepository($repository);
        $this->setValidatorFactories($validatorFactory, $validatorEntityFactory);

        $this->initializeValidatorConfig();
    }

    protected function initializeValidatorConfig(): void
    {
        $this->setValidatorConfig([
            'unemployment_value_id' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 4294967295],
            ],
            'unemployment_id' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 4294967295],
            ],
            'unemployment_value_year' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 65535],
            ],
            'unemployment_value_quarter' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 255],
            ],
            'unemployment_value_number' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 4294967295],
            ],
            'unemployment_value_multiplicator' => [
                'type'      => 'float',
                'options'   => [],
            ],
            'unemployment_value_date_origin' => [
                'type'      => 'datetime',
                'options'   => [],
            ],
            'unemployment_value_date_update' => [
                'type'      => 'datetime',
                'options'   => [],
            ],
        ]);
    }

    /**
     * Get cache key
     *
     * @return string
     */
    public function getCacheKey(): string
    {
        return 'unemployment.value.' . $this->getId();
    }

    /**
     * Get value for property "unemployment_value_id"
     *
     * @return int
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Get value for property "unemployment_id"
     *
     * @return int
     */
    public function getUnemploymentId(): int
    {
        return $this->unemploymentId;
    }

    /**
     * Get value for property "unemployment_value_year"
     *
     * @return int
     */
    public function getYear(): int
    {
        return $this->year;
    }

    /**
     * Get value for property "unemployment_value_quarter"
     *
     * @return int
     */
    public function getQuarter(): int
    {
        return $this->quarter;
    }

    /**
     * Get value for property "unemployment_value_number"
     *
     * @return int
     */
    public function getNumber(): int
    {
        return $this->number;
    }

    /**
     * Get value for property "unemployment_value_multiplicator"
     *
     * @return float
     */
    public function getMultiplicator(): float
    {
        return $this->multiplicator;
    }

    /**
     * Get value for property "unemployment_value_date_origin"
     *
     * @return string
     */
    public function getDateOrigin(): string
    {
        return $this->dateOrigin;
    }

    /**
     * Get value for property "unemployment_value_date_update"
     *
     * @return string
     */
    public function getDateUpdate(): string
    {
        return $this->dateUpdate;
    }

    /**
     * Set value for property "unemployment_value_id"
     *
     * @param  int $id
     * @return $this
     * @throws ValidationException
     */
    public function setId(int $id): self
    {
        $this->validateInput('unemployment_value_id', $id);

        if ($this->exists() && $this->id !== $id) {
            $this->markFieldAsUpdated('id');
        }

        $this->id = $id;

        return $this;
    }

    /**
     * Set auto increment value.
     *
     * @param  integer $id
     * @return $this
     * @throws ValidationException
     */
    public function setAutoIncrementId(int $id): static
    {
        return $this->setId($id);
    }

    /**
     * Set value for property "unemployment_id"
     *
     * @param  int $unemploymentId
     * @return $this
     * @throws ValidationException
     */
    public function setUnemploymentId(int $unemploymentId): self
    {
        $this->validateInput('unemployment_id', $unemploymentId);

        if ($this->exists() && $this->unemploymentId !== $unemploymentId) {
            $this->markFieldAsUpdated('unemploymentId');
        }

        $this->unemploymentId = $unemploymentId;

        return $this;
    }

    /**
     * Set value for property "unemployment_value_year"
     *
     * @param  int $year
     * @return $this
     * @throws ValidationException
     */
    public function setYear(int $year): self
    {
        $this->validateInput('unemployment_value_year', $year);

        if ($this->exists() && $this->year !== $year) {
            $this->markFieldAsUpdated('year');
        }

        $this->year = $year;

        return $this;
    }

    /**
     * Set value for property "unemployment_value_quarter"
     *
     * @param  int $quarter
     * @return $this
     * @throws ValidationException
     */
    public function setQuarter(int $quarter): self
    {
        $this->validateInput('unemployment_value_quarter', $quarter);

        if ($this->exists() && $this->quarter !== $quarter) {
            $this->markFieldAsUpdated('quarter');
        }

        $this->quarter = $quarter;

        return $this;
    }

    /**
     * Set value for property "unemployment_value_number"
     *
     * @param  int $number
     * @return $this
     * @throws ValidationException
     */
    public function setNumber(int $number): self
    {
        $this->validateInput('unemployment_value_number', $number);

        if ($this->exists() && $this->number !== $number) {
            $this->markFieldAsUpdated('number');
        }

        $this->number = $number;

        return $this;
    }

    /**
     * Set value for property "unemployment_value_multiplicator"
     *
     * @param  float $multiplicator
     * @return $this
     * @throws ValidationException
     */
    public function setMultiplicator(float $multiplicator): self
    {
        $this->validateInput('unemployment_value_multiplicator', $multiplicator);

        if ($this->exists() && $this->multiplicator !== $multiplicator) {
            $this->markFieldAsUpdated('multiplicator');
        }

        $this->multiplicator = $multiplicator;

        return $this;
    }

    /**
     * Set value for property "unemployment_value_date_origin"
     *
     * @param  string $dateOrigin
     * @return $this
     * @throws ValidationException
     */
    public function setDateOrigin(string $dateOrigin): self
    {
        $this->validateInput('unemployment_value_date_origin', $dateOrigin);

        if ($this->exists() && $this->dateOrigin !== $dateOrigin) {
            $this->markFieldAsUpdated('dateOrigin');
        }

        $this->dateOrigin = $dateOrigin;

        return $this;
    }

    /**
     * Set value for property "unemployment_value_date_update"
     *
     * @param  string $dateUpdate
     * @return $this
     * @throws ValidationException
     */
    public function setDateUpdate(string $dateUpdate): self
    {
        $this->validateInput('unemployment_value_date_update', $dateUpdate);

        if ($this->exists() && $this->dateUpdate !== $dateUpdate) {
            $this->markFieldAsUpdated('dateUpdate');
        }

        $this->dateUpdate = $dateUpdate;

        return $this;
    }
}
